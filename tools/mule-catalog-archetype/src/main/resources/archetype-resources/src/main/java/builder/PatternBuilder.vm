/*
 * Generated by the Mule Catalog Archetype. http://mule.mulesoft.org
 */

package ${patternBuilderPackageName};

#if($patternType == "si" || $patternType == "siso")
import org.mule.MessageExchangePattern;
#end
import org.mule.api.MuleContext;
import org.mule.api.MuleException;
#if($patternType == "si")
import org.mule.construct.builder.AbstractFlowConstructWithSingleInboundEndpointBuilder;
#elseif($patternType == "siso")
import org.mule.construct.builder.AbstractFlowConstructWithSingleInboundAndOutboundEndpointBuilder;
#else
import org.mule.construct.builder.AbstractFlowConstructBuilder;
#end

import ${patternFQCN};

#if($patternType == "si")
public class ${patternBuilderClassName} extends AbstractFlowConstructWithSingleInboundEndpointBuilder<${patternBuilderClassName}, ${patternClassName}>
#elseif($patternType == "siso")
public class ${patternBuilderClassName} extends AbstractFlowConstructWithSingleInboundAndOutboundEndpointBuilder<${patternBuilderClassName}, ${patternClassName}>
#else
public class ${patternBuilderClassName} extends AbstractFlowConstructBuilder<${patternBuilderClassName}, ${patternClassName}>
#end
{
    // TODO add pattern-specific attribute

    // TODO add pattern-specific attribute setters using a chained-method fluent style
    // For example:
    // public ${patternBuilderClassName} foo(String foo)
    // {
    //     this.foo = foo;
    //     return this;
    // }

    @Override
    protected ${patternClassName} buildFlowConstruct(MuleContext muleContext) throws MuleException
    {
        // TODO add extra pattern-specific attributes to the constructor
#if($patternType == "mp")
        return new ${patternClassName}(name, muleContext);
#elseif($patternType == "ms")
        return new ${patternClassName}(name, muleContext, messageSource);
#elseif($patternType == "si")
        return new ${patternClassName}(name, muleContext, getOrBuildInboundEndpoint(muleContext));
#else
        return new ${patternClassName}(name, muleContext, getOrBuildInboundEndpoint(muleContext), getOrBuildOutboundEndpoint(muleContext));
#end
    }
#if($patternType == "si" || $patternType == "siso")

    @Override
    protected MessageExchangePattern getInboundMessageExchangePattern()
    {
        // TODO return the appropriate MessageExchangePattern
        return MessageExchangePattern.REQUEST_RESPONSE;
    }
#end

#if($patternType == "siso")    
    @Override
    protected MessageExchangePattern getOutboundMessageExchangePattern()
    {
        // TODO return the appropriate MessageExchangePattern
        return MessageExchangePattern.REQUEST_RESPONSE;
    }
#end
}
