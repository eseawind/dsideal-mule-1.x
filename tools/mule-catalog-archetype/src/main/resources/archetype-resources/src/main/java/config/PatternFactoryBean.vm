/*
 * Generated by the Mule Catalog Archetype. http://mule.mulesoft.org
 */

package ${patternConfigPackageName};

#if($patternType == "ms")
import org.mule.api.source.MessageSource;
#elseif($patternType == "si" || $patternType == "siso")
import org.mule.api.endpoint.EndpointBuilder;
#end
import org.mule.config.spring.factories.AbstractFlowConstructFactoryBean;
import org.mule.construct.builder.AbstractFlowConstructBuilder;

import ${patternFQCN};
import ${patternBuilderFQCN};

public class ${patternFactoryBeanClassName} extends AbstractFlowConstructFactoryBean
{
    final ${patternBuilderClassName} ${patternBuilderVariableName} = new ${patternBuilderClassName}();

    public Class<?> getObjectType()
    {
        return ${patternClassName}.class;
    }

    @Override
    protected AbstractFlowConstructBuilder<${patternBuilderClassName}, ${patternClassName}> getFlowConstructBuilder()
    {
        return ${patternBuilderVariableName};
    }
#if($patternType == "ms")
    
    public void setMessageSource(MessageSource messageSource)
    {
        ${patternBuilderVariableName}.messageSource(messageSource);
    }
#end
#if($patternType == "si" || $patternType == "siso")
    
    public void setInboundAddress(String inboundAddress)
    {
        ${patternBuilderVariableName}.inboundAddress(inboundAddress);
    }

    public void setInboundEndpoint(EndpointBuilder inboundEndpointBuilder)
    {
        ${patternBuilderVariableName}.inboundEndpoint(inboundEndpointBuilder);
    }
#end
#if($patternType == "siso")

    public void setOutboundAddress(String outboundAddress)
    {
        ${patternBuilderVariableName}.outboundAddress(outboundAddress);
    }

    public void setOutboundEndpoint(EndpointBuilder outboundEndpointBuilder)
    {
        ${patternBuilderVariableName}.outboundEndpoint(outboundEndpointBuilder);
    }
#end

    // TODO add pattern specific setters that call the underlying builder
    // Like for example:
    // public void setFoo(String foo)
    // {
    // ${patternBuilderVariableName}.foo(foo);
    // }

}
