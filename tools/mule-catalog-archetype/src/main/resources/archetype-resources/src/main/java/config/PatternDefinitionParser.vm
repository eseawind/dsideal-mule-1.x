/*
 * Generated by the Mule Catalog Archetype. http://mule.mulesoft.org
 */

package ${patternConfigPackageName};

import org.mule.config.spring.parsers.specific.AbstractFlowConstructDefinitionParser;
#if($patternType == "si" || $patternType == "siso")
import org.mule.config.spring.parsers.processors.CheckExclusiveAttributes;
import org.mule.config.spring.parsers.processors.CheckExclusiveAttributesAndChildren;
#end

import org.w3c.dom.Element;

public class ${patternDefinitionParserClassName} extends AbstractFlowConstructDefinitionParser
{
    public ${patternDefinitionParserClassName}()
    {
#if($patternType == "si" || $patternType == "siso")
        super.registerPreProcessor(new CheckExclusiveAttributes(new String[][]{
            new String[]{INBOUND_ADDRESS_ATTRIBUTE}, new String[]{INBOUND_ENDPOINT_REF_ATTRIBUTE}}));
        
        super.registerPreProcessor(new CheckExclusiveAttributesAndChildren(new String[]{
            INBOUND_ENDPOINT_REF_ATTRIBUTE, INBOUND_ADDRESS_ATTRIBUTE}, new String[]{INBOUND_ENDPOINT_CHILD}));

#end
#if($patternType == "siso")
        super.registerPreProcessor(new CheckExclusiveAttributes(new String[][]{
            new String[]{OUTBOUND_ADDRESS_ATTRIBUTE}, new String[]{OUTBOUND_ENDPOINT_REF_ATTRIBUTE}}));
        
        super.registerPreProcessor(new CheckExclusiveAttributesAndChildren(new String[]{
            OUTBOUND_ENDPOINT_REF_ATTRIBUTE, OUTBOUND_ADDRESS_ATTRIBUTE, TRANSFORMER_REFS_ATTRIBUTE,
            RESPONSE_TRANSFORMER_REFS_ATTRIBUTE}, new String[]{OUTBOUND_ENDPOINT_CHILD}));
            
#end
        // TODO register aliases, pre-processors as needed by the pattern XML configuration
    }

    @Override
    protected Class<?> getBeanClass(Element element)
    {
        return ${patternFactoryBeanClassName}.class;
    }
}
