#* Common variables for all archetypes *#
#set($patternClassName = $patternFQCN.substring($patternFQCN.lastIndexOf('.')).substring(1))
#set($patternVariableName = "${patternClassName.substring(0,1).toLowerCase()}${patternClassName.substring(1)}")
#set($patternXsdTypeName = "${patternVariableName}Type")
##
#set($patternPackageName = $patternFQCN.substring(0, $patternFQCN.lastIndexOf('.')))
#set($patternPackageDir = $patternPackageName.replace('.', '/'))
##
#set($patternBuilderClassName = "${patternClassName}Builder")
#set($patternBuilderVariableName = "${patternVariableName}Builder")
#set($patternBuilderPackageName = "${patternPackageName}.builder")
#set($patternBuilderPackageDir = $patternBuilderPackageName.replace('.', '/'))
#set($patternBuilderFQCN = "${patternBuilderPackageName}.${patternBuilderClassName}")
##
#set($patternConfigPackageName = "${patternPackageName}.config")
#set($patternConfigPackageDir = $patternConfigPackageName.replace('.', '/'))
##
#set($patternFactoryBeanClassName = "${patternClassName}FactoryBean")
#set($patternFactoryBeanFQCN = "${patternConfigPackageName}.${patternFactoryBeanClassName}")
##
#set($patternDefinitionParserClassName = "${patternClassName}DefinitionParser")
#set($patternConfigFQCN = "${patternConfigPackageName}.${patternDefinitionParserClassName}")
##
**************************
* Pattern Implementation *
**************************

Address all the TODOs in these generated classes:

  - ${patternFQCN}
  - ${patternBuilderFQCN}
  - ${patternFactoryBeanFQCN}
  - ${patternConfigFQCN}


*********************
* Namespace Handler *
*********************

Add the following line in your module's namespace handler init() method:

registerBeanDefinitionParser("${patternTagName}", new ${patternConfigFQCN}());


*********************
*    XML Schema     *
*********************

Add the following lines to your module's XML schema and take care of the TODOs:

    <xsd:element name="${patternTagName}" type="${patternXsdTypeName}" substitutionGroup="abstract-flow-construct">
        <xsd:annotation>
            <xsd:documentation>
                <!-- TODO Add pattern description -->
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:complexType name="${patternXsdTypeName}">
        <xsd:annotation>
            <xsd:documentation>
                <!-- TODO Add pattern description -->
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="baseFlowConstructType">
                <xsd:sequence>
#if($patternType == "si" || $patternType == "siso")
                    <xsd:element ref="abstract-inbound-endpoint" minOccurs="0" maxOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>
                                The endpoint on which messages are received.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
#end
#if($patternType == "siso")
                    <xsd:element ref="abstract-outbound-endpoint" minOccurs="0" maxOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>
                                The endpoint to which messages are sent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
#end
                    <!--
                        TODO Add pattern specific child elements
                     -->
                    <xsd:element ref="abstract-exception-strategy" minOccurs="0"/>
                </xsd:sequence>
#if($patternType == "si" || $patternType == "siso")
                <xsd:attribute name="inboundAddress" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The address on which this bridge is listening.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="inboundEndpoint-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The endpoint on which this bridge is listening.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
#end
#if($patternType == "siso")
                <xsd:attribute name="outboundAddress" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The address to which messages are sent.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="outboundEndpoint-ref" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            The endpoint to which messages are sent.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
#end
                <!--
                    TODO Add pattern specific attributes
                 -->
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    