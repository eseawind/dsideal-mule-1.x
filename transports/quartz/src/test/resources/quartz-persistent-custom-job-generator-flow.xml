<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd">

    <vm:connector name="persistentVmConnector">
        <vm:queue-profile>
            <default-persistent-queue-store />
        </vm:queue-profile>
    </vm:connector>

    <!-- Messages are sent from the test case to the customJobQueue endpoint. 
        This has to be used to ensure that a message has been serialized and deserialized 
        before it hits the quartz endpoint in the CustomJobScheduler service. Sending 
        messages to the "customJobInput" endpoint only are routed sync, no matter 
        what's specified on the endpoint. -->

    <flow name="VmTrampoline">

        <vm:inbound-endpoint path="customJobQueue"
            exchange-pattern="one-way" />
        <vm:outbound-endpoint path="customJobInput"
            exchange-pattern="one-way" />

    </flow>

    <flow name="CustomJobScheduler">

        <vm:inbound-endpoint path="customJobInput"
            exchange-pattern="one-way" />
        <quartz:outbound-endpoint jobName="myService2"
            repeatInterval="1000" repeatCount="1">
            <quartz:custom-job-from-message
                evaluator="payload" expression="" />
        </quartz:outbound-endpoint>


    </flow>

</mule>
