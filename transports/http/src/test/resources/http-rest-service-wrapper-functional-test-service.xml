<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <byte-array-to-string-transformer name="ByteArrayToString"/>

    <http:endpoint name="serverEndpoint" host="localhost" port="${port1}" exchange-pattern="request-response">
        <transformer ref="ByteArrayToString"/>
    </http:endpoint>

    <vm:endpoint name="restServiceEndpoint" path="restservice" exchange-pattern="one-way"/>
    <vm:endpoint name="restServiceEndpoint2" path="restservice2" exchange-pattern="one-way"/>
    <vm:endpoint name="restServiceEndpoint3" path="restservice3" exchange-pattern="one-way"/>

    <model name="Sample">
        <!-- do not log any exceptions, the test makes sure error cases are handled appropriately -->
        <custom-exception-strategy class="org.mule.tck.functional.QuietExceptionStrategy"/>

        <service name="HTTPPostSample">
            <inbound>
                <inbound-endpoint ref="restServiceEndpoint" exchange-pattern="request-response"/>
            </inbound>
            <http:rest-service-component serviceUrl="http://localhost:${port1}" httpMethod="POST">
                <http:error-filter>
                    <regex-filter pattern="echo(.*)"/>
                </http:error-filter>
                <http:payloadParameterName value="echo"/>
            </http:rest-service-component>
        </service>

        <service name="HTTPPostSample2">
            <inbound>
                <inbound-endpoint ref="restServiceEndpoint2" exchange-pattern="request-response"/>
            </inbound>
            <http:rest-service-component serviceUrl="http://localhost:${port1}" httpMethod="POST">
                <http:error-filter>
                    <regex-filter pattern="test(.*)"/>
                </http:error-filter>
                <http:payloadParameterName value="echo"/>
            </http:rest-service-component>
        </service>

        <service name="HTTPPostSample3">
            <inbound>
                <inbound-endpoint ref="restServiceEndpoint3" exchange-pattern="request-response"/>
            </inbound>
            <!-- Test using expressions and literal values -->
            <http:rest-service-component serviceUrl="http://localhost:${port1}" httpMethod="POST">
                <http:requiredParameter key="foo" value="boo"/>
                <http:requiredParameter key="faz" value="#[header:INBOUND:baz-header]"/>
                <http:optionalParameter key="far" value="#[header:INBOUND:bar-optional-header]"/>
            </http:rest-service-component>
        </service>

        <service name="EchoService">
            <inbound>
                <inbound-endpoint ref="serverEndpoint"/>
            </inbound>
            <echo-component/>
        </service>

        <service name="PreserveRequestContentTypeHeader">
            <inbound>
                <vm:inbound-endpoint name="restServiceEndpoint4" path="restservice4" exchange-pattern="request-response">
                    <message-properties-transformer>
                        <add-message-property key="Content-Type" value="foo/bar"/>
                    </message-properties-transformer>
                </vm:inbound-endpoint>
            </inbound>
            <!-- Tests that the content type is not overwritten by RestServiceWrapper -->
            <http:rest-service-component serviceUrl="http://localhost:${port2}/echo" httpMethod="POST"/>
        </service>

        <service name="SendBackContentType">
            <inbound>
                <http:inbound-endpoint address="http://localhost:${port2}/echo"/>
            </inbound>
            <component class="org.mule.transport.http.components.RestServiceWrapperFunctionalTestCase$CopyContentTypeFromRequest"/>
        </service>
    </model>

    <flow name="flow">
        <vm:inbound-endpoint path="toFlow" exchange-pattern="request-response"/>
        <http:rest-service-component serviceUrl="http://localhost:${port1}" httpMethod="POST">
            <http:payloadParameterName value="echo"/>
        </http:rest-service-component>
    </flow>
</mule>
