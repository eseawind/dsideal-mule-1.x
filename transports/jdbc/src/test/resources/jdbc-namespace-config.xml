<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/jdbc http://www.mulesoft.org/schema/mule/jdbc/current/mule-jdbc.xsd">

    <jdbc:connector name="jdbcConnector1" dataSource-ref="testDS1"/>

    <jdbc:connector name="jdbcConnector2" dataSource-ref="testDS2" queryTimeout="3"/>

    <jdbc:connector name="jdbcConnector3" dataSource-ref="testDS1" validateConnections="true">
        <jdbc:query key="getTest"
                    value="SELECT ID, TYPE, DATA, ACK, RESULT FROM TEST WHERE TYPE = #[type] AND ACK IS NULL" />
        <jdbc:query key="getTest2"
                    value="SELECT ID, TYPE, DATA, ACK, RESULT FROM TEST WHERE TYPE = #[type] AND ACK IS NULL" />
        <jdbc:query key="getTest.ack"
                    value="UPDATE TEST SET ACK = #[function:NOW]WHERE ID = #[id] AND TYPE = #[type] AND DATA = #[data]" />
    </jdbc:connector>

    <jdbc:connector name="jdbcConnector4" dataSource-ref="testDS2">
        <jdbc:sqlStatementStrategyFactory class="org.mule.transport.jdbc.config.JdbcNamespaceHandlerTestCase$TestSqlStatementStrategyFactory"/>
    </jdbc:connector>

    <jdbc:connector name="jdbcConnector5" dataSource-ref="testDS2">
        <jdbc:sqlStatementStrategyFactory ref="sqlStatementStrategyFactory"/>
    </jdbc:connector>

    <jdbc:endpoint name="testJdbcEndpoint" address="jdbc://getTest?type=1" connector-ref="jdbcConnector3" 
        queryTimeout="3" exchange-pattern="one-way">
        <jdbc:query key="getTest2" value="OVERRIDDEN VALUE" />
        <jdbc:query key="getTest3" value="SELECT ID, TYPE, DATA, ACK, RESULT FROM TEST WHERE TYPE = #[type] AND ACK IS NULL" />
    </jdbc:endpoint>

    <jdbc:endpoint name="endpointWithTransaction" address="jdbc://getTest?type=1" 
        connector-ref="jdbcConnector3" exchange-pattern="one-way">
        <jdbc:transaction action="NONE"/>
    </jdbc:endpoint>
    
    <jdbc:endpoint name="endpointWithXaTransaction" address="jdbc://getTest?type=1"
        connector-ref="jdbcConnector3" exchange-pattern="one-way">
        <xa-transaction action="ALWAYS_BEGIN"/>
    </jdbc:endpoint>
    
    <spring:bean id="testDS1" class="org.mule.transport.jdbc.test.TestDataSource" />
    <spring:bean name="sqlStatementStrategyFactory" class="org.mule.transport.jdbc.config.JdbcNamespaceHandlerTestCase$TestSqlStatementStrategyFactory"/>

    <spring:beans>
        <jee:jndi-lookup id="testDS2" jndi-name="jdbc/testDS" environment-ref="jndiEnv" />
        
        <util:map id="jndiEnv">
            <spring:entry key="java.naming.factory.initial" value="org.mule.transport.jdbc.test.JdbcTestContextFactory" />
        </util:map>
    </spring:beans>

</mule>
