<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans" xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
    xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <script:transformer name="stringReplace">
        <script:script engine="groovy">
            return src.toString().replaceAll("l", "x")
        </script:script>
    </script:transformer>

    <!--// START SNIPPET: transformer-config -->
    <script:transformer name="stringReplaceWithParams">
        <script:script engine="groovy">
            <property key="oldStr" value="l" />
            <property key="newStr" value="x" />
            <script:text>
                return payload.toString().replaceAll("$oldStr", "$newStr")
            </script:text>
        </script:script>
    </script:transformer>
    <!--// END SNIPPET: transformer-config -->

    <model>
        <service name="inlineScript">
            <inbound>
                <inbound-endpoint address="vm://in1" exchange-pattern="one-way" />
            </inbound>
            <echo-component />
            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="vm://out1" exchange-pattern="one-way">
                        <script:transformer>
                            <script:script engine="groovy">
                                return src.toString().replaceAll("l", "x")
                            </script:script>
                        </script:transformer>
                    </outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>

        <service name="fileBasedScript">
            <inbound>
                <inbound-endpoint address="vm://in2" exchange-pattern="one-way" />
            </inbound>
            <echo-component />
            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="vm://out2" exchange-pattern="one-way">
                        <script:transformer>
                            <script:script file="simple-transformer.groovy" />
                        </script:transformer>
                    </outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>

        <service name="referencedTransformer">
            <inbound>
                <inbound-endpoint address="vm://in3" exchange-pattern="one-way" />
            </inbound>
            <echo-component />
            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="vm://out3" exchange-pattern="one-way">
                        <transformer ref="stringReplace" />
                    </outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>

        <service name="referencedTransformerWithParameters">
            <inbound>
                <inbound-endpoint address="vm://in4" />
            </inbound>
            <echo-component />
            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="vm://out4" exchange-pattern="one-way">
                        <transformer ref="stringReplaceWithParams" />
                    </outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>

        <service name="transformByAssigningPayload">
            <inbound>
                <inbound-endpoint address="vm://in5" exchange-pattern="request-response">
                    <script:transformer>
                        <script:script engine="groovy">
                            payload = 'bar'
                            return payload
                        </script:script>
                    </script:transformer>
                </inbound-endpoint>
            </inbound>
            <echo-component />
        </service>

        <service name="transformByAssigningHeader">
            <inbound>
                <inbound-endpoint address="vm://in6" exchange-pattern="request-response">
                    <script:transformer>
                        <script:script engine="groovy">
                            message.setOutboundProperty('foo','bar')
                            return payload
                        </script:script>
                    </script:transformer>
                </inbound-endpoint>
            </inbound>
            <echo-component />
        </service>

    </model>

</mule>
