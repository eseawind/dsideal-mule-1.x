<?xml version="1.0" encoding="UTF-8"?>
<!--// START SNIPPET: full-config -->
<!--// START SNIPPET: component-example -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <script:script name="myScript" engine="groovy">
        return "$payload Received"
    </script:script>

    <flow name="inlineScript">
        <description>
            This example demonstrates how to configure a Groovy Script component with an in-line script.
            </description>
        <inbound-endpoint address="vm://in1" exchange-pattern="one-way"/>
        <script:component>
            <script:script engine="groovy">
                return "$payload Received"
                </script:script>
        </script:component>
        <outbound-endpoint address="vm://out1" exchange-pattern="one-way"/>
    </flow>

    <flow name="inlineScriptMutateProperty">
        <script:component>
            <script:script engine="groovy">
                message.setOutboundProperty('foo', 'bar-mutated')                
             </script:script>
        </script:component>
        <test:assert expression="#[groovy:message.getOutboundProperty('foo').equals('bar-mutated')]"/>
    </flow>

    <flow name="inlineScriptAddProperty">
        <script:component>
            <script:script engine="groovy">
                message.setOutboundProperty('foo', 'bar')                
             </script:script>
        </script:component>
        <test:assert expression="#[groovy:message.getOutboundProperty('foo').equals('bar')]"/>
    </flow>

    <flow name="inlineScriptMutatePropertiesMap">
        <script:component>
            <script:script engine="groovy">
                outbound = new HashMap()              
             </script:script>
        </script:component>
        <test:assert expression="#[groovy:message.getOutboundProperty('foo').equals('bar')]"/>
        <test:assert expression="#[groovy:payload instanceof HashMap]"/>
    </flow>

    <flow name="inlineScriptMutateVariable">
        <script:component>
            <script:script engine="groovy">
                message.setInvocationProperty('foo','bar-mutated')                
             </script:script>
        </script:component>
        <test:assert expression="#[groovy:message.getInvocationProperty('foo').equals('bar-mutated')]"/>
    </flow>
    
    <flow name="inlineScriptAddVariable">
        <script:component>
            <script:script engine="groovy">
                message.setInvocationProperty('foo','bar')                
             </script:script>
        </script:component>
        <test:assert expression="#[groovy:message.getInvocationProperty('foo').equals('bar')]"/>
    </flow>

    <flow name="inlineScriptMutateVariablesMap">
        <script:component>
            <script:script engine="groovy">
                flowVars = new HashMap()              
             </script:script>
        </script:component>
        <test:assert expression="#[groovy:message.getInvocationProperty('foo').equals('bar')]"/>
        <test:assert expression="#[groovy:payload instanceof HashMap]"/>
    </flow>
    

    <flow name="inlineScriptMutatePayload">
        <script:component>
            <script:script engine="groovy">
                payload = 'bar-mutated'               
             </script:script>
        </script:component>
        <test:assert expression="#[groovy:payload.equals('bar-mutated')]"/>
    </flow>


    <!--// END SNIPPET: component-example -->

    <flow name="fileBasedScript">
        <inbound-endpoint address="vm://in2" exchange-pattern="one-way"/>
        <script:component>
            <script:script file="simple-script.groovy"/>
        </script:component>
        <outbound-endpoint address="vm://out2" exchange-pattern="one-way"/>
    </flow>

    <flow name="referencedScript">
        <inbound-endpoint address="vm://in3" exchange-pattern="one-way"/>
        <script:component script-ref="myScript"/>
        <outbound-endpoint address="vm://out3" exchange-pattern="one-way"/>
    </flow>

    <flow name="scriptVariables">
        <inbound-endpoint address="vm://in4" exchange-pattern="one-way"/>
        <script:component>
            <script:script engine="groovy">
                <property key="prop1" value="Received"/>
                <property key="prop2" value="A-OK"/>
                <script:text>
                        return "$payload $prop1 $prop2"
                    </script:text>
            </script:script>
        </script:component>
        <outbound-endpoint address="vm://out4" exchange-pattern="one-way"/>
    </flow>
    
</mule>
        <!--// END SNIPPET: full-config -->
