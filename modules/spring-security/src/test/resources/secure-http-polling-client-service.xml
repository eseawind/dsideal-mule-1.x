<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:http="http://www.mulesoft.org/schema/mule/http"
       xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
       xmlns:test="http://www.mulesoft.org/schema/mule/test"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <http:polling-connector name="PollingHttpConnector" pollingFrequency="2000"/>

    <vm:connector name="vmQueue"/>

    <!--
        This uses the polling HTTP connector every 30 seconds
    -->
    <model name="http polling test model">
        <service name="pollingUMO_authenticated">
            <inbound>
                <inbound-endpoint address="http://marie:marie@localhost:${port1}"
                    connector-ref="PollingHttpConnector" exchange-pattern="request-response"/>
            </inbound>

            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="vm://toclient" exchange-pattern="one-way"/>
                </pass-through-router>
            </outbound>
        </service>

        <service name="pollingUMO_not_authenticated">
            <inbound>
                <inbound-endpoint address="http://dodgy:geezer@localhost:${port1}"
                    connector-ref="PollingHttpConnector" exchange-pattern="request-response"/>
            </inbound>

            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="vm://toclient2" exchange-pattern="one-way">
                        <message-properties-transformer scope="outbound">
                            <add-message-property key="http.status" value="#[header:INBOUND:http.status]" />
                        </message-properties-transformer>
                    </outbound-endpoint>
                </pass-through-router>
            </outbound>
        </service>
    </model>

</mule>
