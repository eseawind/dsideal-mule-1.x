<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">

    <jms:activemq-connector name="jmsConnector" />

    <!-- The Mule implementation of the Spring ApplicationEventMulticaster.  On startup the
        application context will look in the container for a bean called applicationEventMulticaster and
        register it as the spring context event multicaster  -->
    <spring:bean id="applicationEventMulticaster"
        class="org.mule.module.spring.events.MuleEventMulticaster"
        scope="singleton" />

    <!-- Our ourderManager bean -->
    <spring:bean id="orderManagerBean"
        class="org.mule.test.integration.spring.events.OrderManagerBean">
        <spring:property name="subscriptions">
            <spring:list>
                <spring:value>axis:http://localhost:${port1}/mule/orderManager</spring:value>
            </spring:list>
        </spring:property>
    </spring:bean>

    <spring:bean id="StringToOrder"
        class="org.mule.test.integration.spring.events.StringToOrder">
        <spring:property name="returnClass">
            <spring:value>org.mule.test.integration.spring.events.Order</spring:value>
        </spring:property>
    </spring:bean>
</mule>
