<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd">

    <jms:activemq-connector name="jmsConnector" maxRedelivery="3"/>

    <smtp:gmail-connector name="emailConnector"/>

    <model>
        <service name="LastMessageStateRouting">
            <inbound>
                <jms:inbound-endpoint queue="in1">
                    <jms:transaction action="ALWAYS_BEGIN"/>
                </jms:inbound-endpoint>
                <append-string-transformer message=" with some text added"/>
            </inbound>
            <test:component/>
            <outbound>
                <pass-through-router>
                    <jms:outbound-endpoint queue="out">
                        <jms:transaction action="ALWAYS_JOIN"/>
                    </jms:outbound-endpoint>
                </pass-through-router>
            </outbound>
            <default-exception-strategy>
                <commit-transaction exception-pattern="*"/>
                <processor-chain>
                    <expression-transformer evaluator="groovy" expression="payload.getPayload()"/>
                    <jms:outbound-endpoint queue="dead.letter1">
                        <jms:transaction action="ALWAYS_JOIN"/>
                    </jms:outbound-endpoint>
                </processor-chain>
            </default-exception-strategy>
        </service>

        <service name="OriginalMessageRouting">
            <inbound>
                <jms:inbound-endpoint queue="in2">
                    <jms:transaction action="ALWAYS_BEGIN"/>
                </jms:inbound-endpoint>
                <message-properties-transformer scope="session">
                    <add-message-property key="originalMessage" value="#[message:payload]"/>
                </message-properties-transformer>
                <append-string-transformer message=" with some text added"/>
            </inbound>
            <test:component/>
            <outbound>
                <pass-through-router>
                    <jms:outbound-endpoint queue="out">
                        <jms:transaction action="ALWAYS_JOIN"/>
                    </jms:outbound-endpoint>
                </pass-through-router>
            </outbound>
            <default-exception-strategy>
                <commit-transaction exception-pattern="*"/>
                <processor-chain>
                    <expression-transformer evaluator="header" expression="SESSION:originalMessage"/>
                    <message-properties-transformer scope="session">
                        <delete-message-property key="originalMessage"/>
                    </message-properties-transformer>
                    <jms:outbound-endpoint queue="dead.letter2">
                        <jms:transaction action="ALWAYS_JOIN"/>
                    </jms:outbound-endpoint>
                </processor-chain>
            </default-exception-strategy>
        </service>

        <service name="RouteByExceptionType">
            <inbound>
                <jms:inbound-endpoint queue="in3">
                    <jms:transaction action="ALWAYS_BEGIN"/>
                </jms:inbound-endpoint>
            </inbound>
            <test:component/>
            <outbound>
                <pass-through-router>
                    <jms:outbound-endpoint queue="out">
                        <jms:transaction action="ALWAYS_JOIN"/>
                    </jms:outbound-endpoint>
                </pass-through-router>
            </outbound>
            <default-exception-strategy>
                <commit-transaction exception-pattern="org.mule.transport.jms.redelivery.MessageRedeliveredException"/>
                <choice>
                    <when evaluator="groovy"
                          expression='payload.getException() instanceof org.mule.transport.jms.redelivery.MessageRedeliveredException'>
                        <expression-transformer evaluator="groovy" expression="payload.getPayload()"/>
                        <jms:outbound-endpoint queue="dead.letter3">
                            <jms:transaction action="ALWAYS_JOIN"/>
                        </jms:outbound-endpoint>
                    </when>
                    <when evaluator="groovy"
                          expression="payload.getException() instanceof org.mule.component.ComponentException">
                        <jms:outbound-endpoint queue="exceptions">
                            <jms:transaction action="NONE"/>
                        </jms:outbound-endpoint>
                    </when>
                    <otherwise>
                        <logger/>
                    </otherwise>
                </choice>
            </default-exception-strategy>
        </service>

        <service name="PreservePayloadExceptionStrategy">
            <inbound>
                <vm:inbound-endpoint path="in4" exchange-pattern="request-response"/>
                <append-string-transformer message=" with some text added"/>
            </inbound>
            <test:component throwException="true"/>
            <custom-exception-strategy
                    class="org.mule.test.integration.exceptions.ExceptionStrategyCommonScenariosTestCase$PreservePayloadExceptionStrategy">
                <logger/>
            </custom-exception-strategy>
        </service>

        <service name="StopFlowBasedOnExceptionType">
            <inbound>
                <vm:inbound-endpoint path="in5" exchange-pattern="request-response"/>
            </inbound>
            <test:component/>
            <outbound>
                <pass-through-router>
                    <http:outbound-endpoint host="localhost" port="${port7}" responseTimeout="5"/>
                </pass-through-router>
            </outbound>
            <default-exception-strategy>
                <choice>
                    <when evaluator="groovy"
                          expression="payload.getException().getCause() instanceof java.net.ConnectException">
                        <script:component>
                            <script:script engine="groovy">
                                flowConstruct.stop();
                            </script:script>
                        </script:component>
                    </when>
                    <otherwise>
                        <logger/>
                    </otherwise>
                </choice>
            </default-exception-strategy>
        </service>

    </model>


</mule>
