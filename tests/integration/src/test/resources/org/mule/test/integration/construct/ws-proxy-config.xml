<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
    xmlns:script="http://www.mulesoft.org/schema/mule/scripting" xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:pattern="http://www.mulesoft.org/schema/mule/pattern"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/pattern http://www.mulesoft.org/schema/mule/pattern/current/mule-pattern.xsd
       http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
       http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd">

    <pattern:web-service-proxy name="weather-forecast-ws-proxy"
        inboundAddress="http://localhost:${port1}/weather-forecast/0"
        outboundAddress="http://localhost:${port2}/weather-forecast" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-fixed-wsdl-file"
        inboundAddress="http://localhost:${port1}/weather-forecast/1"
        outboundAddress="http://localhost:${port2}/weather-forecast"
        wsdlFile="org/mule/test/integration/construct/weather-forecaster.wsdl" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-fixed-wsdl-url"
        inboundAddress="http://localhost:${port1}/weather-forecast/2"
        outboundAddress="http://localhost:${port2}/weather-forecast"
        wsdlLocation="http://localhost:${port2}/weather-forecast?wsdl" />

    <http:endpoint name="local-proxy-endpoint"
        address="http://localhost:${port1}/weather-forecast/3" />

    <http:endpoint name="target-ws-endpoint"
        address="http://localhost:${port2}/weather-forecast" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-endpoints"
        inboundEndpoint-ref="local-proxy-endpoint" outboundEndpoint-ref="target-ws-endpoint" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-transformers"
        inboundAddress="http://localhost:${port1}/weather-forecast/4"
        transformer-refs="object-to-string-transformer zip-code-changer-1"
        responseTransformer-refs="object-to-string-transformer zip-code-changer-2"
        outboundEndpoint-ref="target-ws-endpoint" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-exception-strategy"
        inboundAddress="http://localhost:${port1}/weather-forecast/5"
        outboundEndpoint-ref="target-ws-endpoint">
        <default-exception-strategy />
    </pattern:web-service-proxy>

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-abstract-parent"
        abstract="true" transformer-refs="object-to-string-transformer zip-code-changer-1"
        responseTransformer-refs="object-to-string-transformer zip-code-changer-2"
        outboundEndpoint-ref="target-ws-endpoint" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-concrete-child"
        parent="weather-forecast-ws-proxy-abstract-parent" inboundAddress="http://localhost:${port1}/weather-forecast/6" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-child-endpoints">
        <http:inbound-endpoint address="http://localhost:${port1}/weather-forecast/7" />
        <http:outbound-endpoint address="http://localhost:${port2}/weather-forecast" />
    </pattern:web-service-proxy>

    <pattern:web-service-proxy
        name="weather-forecast-ws-proxy-concrete-child-endpoints" parent="weather-forecast-ws-proxy-abstract-parent">
        <http:inbound-endpoint address="http://localhost:${port1}/weather-forecast/8" />
    </pattern:web-service-proxy>

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-expression"
        inboundAddress="http://localhost:${port1}/weather-forecast/9"
        outboundAddress="http://localhost:${port2}/#[string:weather-forecast]" />

    <pattern:web-service-proxy name="weather-forecast-ws-proxy-properties-propagation">
        <http:inbound-endpoint address="http://localhost:${port1}/weather-forecast/10" />
        <http:outbound-endpoint address="http://localhost:${port3}/weather-forecast" />
    </pattern:web-service-proxy>

  <!--
        Test support
  -->
    <object-to-string-transformer name="object-to-string-transformer" />
    <script:transformer name="zip-code-changer-1">
        <script:script engine="groovy">
            <script:text>return payload.replace('95050','21718')</script:text>
        </script:script>
    </script:transformer>
    <script:transformer name="zip-code-changer-2">
        <script:script engine="groovy">
            <script:text>return payload.replace('21718','95050')</script:text>
        </script:script>
    </script:transformer>

    <message-properties-transformer scope="outbound" name="add-content-encoding-transformer">
        <add-message-property key="Content-Encoding" value="gzip" />
    </message-properties-transformer>

    <simple-service name="weather-forecaster-ws"
        address="http://localhost:${port2}/weather-forecast" component-class="org.mule.test.integration.tck.WeatherForecaster"
        type="jax-ws" />

    <simple-service name="weather-forecaster-ws-content-encoding-response"
        address="http://localhost:${port3}/weather-forecast" component-class="org.mule.test.integration.tck.WeatherForecaster"
        type="jax-ws" responseTransformer-refs="add-content-encoding-transformer" />

</mule>
