<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <message-properties-transformer name="hop1ResponseEnricher">
        <add-message-property key="TICKET" value="hop1"/>
    </message-properties-transformer>
    <message-properties-transformer name="hop2enricher">
        <add-message-property key="TTL" value="10000"/>
    </message-properties-transformer>

    <endpoint name="inboundEndpoint" address="vm://inbound" exchange-pattern="request-response"/>
    <endpoint name="hop1Endpoint" address="vm://hop1" exchange-pattern="request-response"/>
    <endpoint name="hop2Endpoint" address="vm://hop2" exchange-pattern="request-response"/>

    <model name="main">
        <service name="chainingComponent">
            <inbound>
                <inbound-endpoint ref="inboundEndpoint"/>
                <forwarding-router/>
            </inbound>
            <outbound>
                <chaining-router>
                    <outbound-endpoint ref="hop1Endpoint"/>
                    <outbound-endpoint ref="hop2Endpoint"/>
                </chaining-router>
            </outbound>
        </service>

        <service name="hop1Service">
            <inbound>
                <inbound-endpoint ref="hop1Endpoint" responseTransformer-refs="hop1ResponseEnricher"/>
            </inbound>
            <test:component logMessageDetails="true"/>
        </service>

        <service name="hop2Service">
            <inbound>
                <inbound-endpoint ref="hop2Endpoint" transformer-refs="hop2enricher">
                    <message-properties-transformer>
                        <!--
                            Note that we propagate TICKET prop to the outbound here, but strictly
                            speaking, it's available in the inbound scope for client anyway (incoming
                            from the previous hop).
                        -->
                        <add-message-property key="TICKET" value="#[header:INBOUND:TICKET]"/>
                    </message-properties-transformer>
                </inbound-endpoint>
            </inbound>
            <test:component logMessageDetails="true"/>
        </service>
    </model>
</mule>
