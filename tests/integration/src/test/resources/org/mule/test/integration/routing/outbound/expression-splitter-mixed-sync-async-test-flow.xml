<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans" 
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

    <vm:connector name="vm"/>

    <flow name="Distributor">
        <vm:inbound-endpoint path="distributor.queue" exchange-pattern="request-response"/>
        <!-- FruitBowl.getFruit() List -->
        <splitter evaluator="bean" expression="fruit"/>
        <choice>
            <when expression="org.mule.tck.testmodels.fruit.Apple" evaluator="payload-type">
                <vm:outbound-endpoint path="service1.queue" exchange-pattern="request-response"/>
            </when>
            <when expression="org.mule.tck.testmodels.fruit.Banana" evaluator="payload-type">
                <vm:outbound-endpoint path="service2.queue" exchange-pattern="one-way"/>
                <message-filter>
                	<expression-filter expression="false"/>
                </message-filter>
            </when>
            <when expression="org.mule.tck.testmodels.fruit.Orange" evaluator="payload-type">
                <vm:outbound-endpoint path="service3.queue" exchange-pattern="request-response"/>
            </when>
        </choice>
    </flow>

    <flow name="ServiceOne">
        <vm:inbound-endpoint path="service1.queue" exchange-pattern="request-response"/>
        <logger message="ServiceOne" level="ERROR"/>
        <test:component>
            <test:return-data>#[function:shortPayloadClass] Received in #[context:serviceName]</test:return-data>
        </test:component>
    </flow>

    <flow name="ServiceTwo">
        <vm:inbound-endpoint path="service2.queue" exchange-pattern="one-way"/>
        <logger message="ServiceTwo" level="ERROR"/>
        <test:component>
            <test:return-data>#[function:shortPayloadClass] Received in #[context:serviceName]</test:return-data>
        </test:component>
    </flow>

    <flow name="ServiceThree">
        <vm:inbound-endpoint path="service3.queue" exchange-pattern="request-response"/>
        <logger message="ServiceThree" level="ERROR"/>
        <test:component>
            <test:return-data>#[function:shortPayloadClass] Received in #[context:serviceName]</test:return-data>
        </test:component>
    </flow>

</mule>
