<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <vm:connector name="queue"/>

    <model>
        <!--
            Split the message and set correlation group ids and sizes
        -->
        <service name="splitter">
            <inbound>
                <vm:inbound-endpoint path="splitter" exchange-pattern="one-way"/>
            </inbound>
            <outbound>
                <!--
                    round-robin is critical here, otherwise 'lostInTime' endpoint is never hit.
                -->
                <list-message-splitter-router disableRoundRobin="false">
                    <vm:outbound-endpoint path="aggregator" exchange-pattern="one-way"/>
                    <vm:outbound-endpoint path="lostInTime" exchange-pattern="one-way"/>
                </list-message-splitter-router>
            </outbound>
        </service>

        <!--
            This service waits long enough for the correlation-aggregator-router to timeout,
            no message should pass through this service.
        -->
        <service name="vortex">
            <inbound>
                <vm:inbound-endpoint path="lostInTime" exchange-pattern="one-way"/>
            </inbound>
            <test:component waitTime="6000"/>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="aggregator" exchange-pattern="one-way"/>
                </pass-through-router>
            </outbound>
        </service>

        <!--
            This service waits for messages and times out
        -->
        <service name="aggregator">
            <inbound>
                <vm:inbound-endpoint path="aggregator" exchange-pattern="one-way"/>
                <collection-aggregator-router timeout="2000" failOnTimeout="false"/>
            </inbound>
            <test:component/>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="out" exchange-pattern="one-way"
                        connector-ref="queue"/>
                </pass-through-router>
            </outbound>
        </service>
    </model>
</mule>
